/**
 * Components > Media element
 * ===================================
 * A common pattern that sees an image followed by a block of information.
 *
 * Example: SERP – Restaurant logos
 *
 * Documentation:
 * https://fozzie.just-eat.com/styleguide/ui-components/mediaElement
 */

$mediaElement-img-width         : 50px;
$mediaElement-img-width--mid    : 78px;
$mediaElement-img-width--wide   : 67px;
$mediaElement-img-borderRadius  : 2px;
$mediaElement-infoLinkColor     : $blue;
$mediaElement-fontSize          : body-l;
$mediaElement-spacing           : spacing(x2);


// mediaElement module
// Usually consists of having an image to the left and content to the right
.c-mediaElement {
    display: flex; //defaults to row
    align-items: flex-start;
    width: 100%;

    & > :not(:last-child) {
        @include media('>=mid') {
            margin-right: spacing(base);
        }
    }
}

// stacks the elements (across all viewports)
.c-mediaElement--fullstack {
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

// stacks the elements (only on narrow)
.c-mediaElement--stack {
    @include media('<mid') {
        flex-direction: column;
        align-items: center;
    }
}

    .c-mediaElement-img {
        line-height: 0;
        margin-right: 5%;

        &,
        & > img {
            width: $mediaElement-img-width;

            @include media('>narrow') {
                width: $mediaElement-img-width--mid;
            }

            @include media('>=wide') {
                width: $mediaElement-img-width--wide;
            }
        }

        // make sure we cut off the corners of the image and the container
        &,
        & > img {
            border-radius: 3px;
        }

        // center the img when stacked
        .c-mediaElement--fullstack & {
            margin-right: 0;
            flex-basis: auto;
        }

        .c-mediaElement--stack & {
            flex-basis: auto;

            @include media('<mid') {
                margin-right: 0;
                flex-grow: 1;
            }

            @include media('>=mid') {
                margin-top: spacing(base) / 4;
            }

            @include media('>=wide') {
                margin-top: 0;
            }
        }
    }

    // apply an outline to the mediaElement img
    .c-mediaElement-img--outlined {
        border: solid 1px $color-border;
        border-radius: $mediaElement-img-borderRadius;
    }

    .c-mediaElement-img--small {
        max-width: 70px;
        max-height: 70px;
    }

    // positions the image over the top edge of the media element
    .c-mediaElement-img--negativeTop {
        margin-top: 0;
        position: absolute;
        top: -24px;

        @include media('>=narrow') {
            top: -40px;
        }
    }

    .c-mediaElement-heading {
        margin: spacing(x6) 0 spacing(x2);
    }

    .c-mediaElement-content {
        flex-basis: 0;
        flex-grow: 1;

        .c-mediaElement--fullstack & {
            flex: auto;
            margin-top: spacing(x0.5);
        }

        .c-mediaElement--fullstack--negativeTop & {
            flex: auto;
            margin-top: -#{spacing(x2)};
        }

        // some content uses br for content shaping – get rid of it on mobile devices
        & br {
            @include media('<mid') {
                display: none;
            }
        }
    }

    .c-mediaElement-text {
        margin-top: 0;
        @include font-size(caption, false);
    }

    .c-mediaElement-text--large {
        @include font-size(heading-m, false); // TODO – this should be updated with a more semantic font alias, as it's not a heading
        line-height: 1.2;
    }

    .c-mediaElement-infoLink {
        @include font-size($mediaElement-fontSize);
        align-items: center;
        color: $mediaElement-infoLinkColor;
        display: flex;
        position: absolute;
        right: $mediaElement-spacing;
        text-decoration: none;
        top: $mediaElement-spacing;

        @include media('<mid') {
            right: spacing(x2);
            top: spacing(x2);
        }

        &:hover {
            text-decoration: underline;
        }
    }
